[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "alibabacloud-cluster-audit-log-mcp-server"
version = "0.1.0"
description = "AlibabaCloud ACK MCP Server for Kubernetes audit log querying"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "AlibabaCloud", email = "support@alibabacloud.com"},
]
maintainers = [
    {name = "AlibabaCloud", email = "support@alibabacloud.com"},
]
keywords = [
    "kubernetes",
    "audit-logs",
    "mcp",
    "alibabacloud",
    "sls",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Logging",
    "Topic :: System :: Monitoring",
]
requires-python = ">=3.8"
dependencies = [
    "mcp>=1.0.0",
    "pyyaml>=6.0",
    "pydantic>=2.0.0",
    "aliyun-log-python-sdk>=0.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/alibabacloud/alibabacloud-ack-mcp-server"
Documentation = "https://github.com/alibabacloud/alibabacloud-ack-mcp-server#readme"
Repository = "https://github.com/alibabacloud/alibabacloud-ack-mcp-server.git"
Issues = "https://github.com/alibabacloud/alibabacloud-ack-mcp-server/issues"
Changelog = "https://github.com/alibabacloud/alibabacloud-ack-mcp-server/blob/main/CHANGELOG.md"

[project.scripts]
alibabacloud-cluster-audit-log-mcp-server = "alibabacloud_cluster_audit_log_mcp_server.server:main"
cluster-audit-log-mcp-server = "alibabacloud_cluster_audit_log_mcp_server.server:main"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["alibabacloud_cluster_audit_log_mcp_server"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/test",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml",
    "/config.yaml",
]

[tool.pytest.ini_options]
testpaths = ["test"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=src/alibabacloud_cluster_audit_log_mcp_server",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "alibaba: marks tests that require Alibaba Cloud SDK",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/alibabacloud_cluster_audit_log_mcp_server"]
omit = [
    "*/test/*",
    "*/tests/*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["alibabacloud_cluster_audit_log_mcp_server"]
known_third_party = ["mcp", "pydantic", "yaml", "aliyun"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "aliyun.log.*",
]
ignore_missing_imports = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg-info",
]
per-file-ignores = [
    "__init__.py:F401",
    "test_*.py:S101",
]
